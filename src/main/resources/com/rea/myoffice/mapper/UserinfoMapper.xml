<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rea.myoffice.mapper.UserinfoMapper">
    <resultMap id="BaseResultMap" type="com.rea.myoffice.model.Userinfo">
        <id column="UserId" jdbcType="VARCHAR" property="userId"/>
        <result column="UserName" jdbcType="VARCHAR" property="userName"/>
        <result column="Password" jdbcType="VARCHAR" property="password"/>
        <result column="DepartId" jdbcType="INTEGER" property="departId"/>
        <result column="Gender" jdbcType="INTEGER" property="gender"/>
        <result column="RoleId" jdbcType="INTEGER" property="roleId"/>
        <result column="UserState" jdbcType="INTEGER" property="userState"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        UserId, UserName, Password, DepartId, Gender, RoleId, UserState
    </sql>
    <select id="selectByExample" parameterType="com.rea.myoffice.model.UserinfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from userinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from userinfo
        where UserId = #{userId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete
        from userinfo
        where UserId = #{userId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.rea.myoffice.model.UserinfoExample">
        delete from userinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.rea.myoffice.model.Userinfo">
        insert into userinfo (UserId, UserName, Password,
                              DepartId, Gender, RoleId,
                              UserState)
        values (#{userId,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{departId,jdbcType=INTEGER}, #{gender,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER},
                #{userState,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.rea.myoffice.model.Userinfo">
        insert into userinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                UserId,
            </if>
            <if test="userName != null">
                UserName,
            </if>
            <if test="password != null">
                Password,
            </if>
            <if test="departId != null">
                DepartId,
            </if>
            <if test="gender != null">
                Gender,
            </if>
            <if test="roleId != null">
                RoleId,
            </if>
            <if test="userState != null">
                UserState,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="departId != null">
                #{departId,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="userState != null">
                #{userState,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.rea.myoffice.model.UserinfoExample" resultType="java.lang.Long">
        select count(*) from userinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update userinfo
        <set>
            <if test="row.userId != null">
                UserId = #{row.userId,jdbcType=VARCHAR},
            </if>
            <if test="row.userName != null">
                UserName = #{row.userName,jdbcType=VARCHAR},
            </if>
            <if test="row.password != null">
                Password = #{row.password,jdbcType=VARCHAR},
            </if>
            <if test="row.departId != null">
                DepartId = #{row.departId,jdbcType=INTEGER},
            </if>
            <if test="row.gender != null">
                Gender = #{row.gender,jdbcType=INTEGER},
            </if>
            <if test="row.roleId != null">
                RoleId = #{row.roleId,jdbcType=INTEGER},
            </if>
            <if test="row.userState != null">
                UserState = #{row.userState,jdbcType=INTEGER},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update userinfo
        set UserId = #{row.userId,jdbcType=VARCHAR},
        UserName = #{row.userName,jdbcType=VARCHAR},
        Password = #{row.password,jdbcType=VARCHAR},
        DepartId = #{row.departId,jdbcType=INTEGER},
        Gender = #{row.gender,jdbcType=INTEGER},
        RoleId = #{row.roleId,jdbcType=INTEGER},
        UserState = #{row.userState,jdbcType=INTEGER}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.rea.myoffice.model.Userinfo">
        update userinfo
        <set>
            <if test="userName != null">
                UserName = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                Password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="departId != null">
                DepartId = #{departId,jdbcType=INTEGER},
            </if>
            <if test="gender != null">
                Gender = #{gender,jdbcType=INTEGER},
            </if>
            <if test="roleId != null">
                RoleId = #{roleId,jdbcType=INTEGER},
            </if>
            <if test="userState != null">
                UserState = #{userState,jdbcType=INTEGER},
            </if>
        </set>
        where UserId = #{userId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.rea.myoffice.model.Userinfo">
        update userinfo
        set UserName  = #{userName,jdbcType=VARCHAR},
            Password  = #{password,jdbcType=VARCHAR},
            DepartId  = #{departId,jdbcType=INTEGER},
            Gender    = #{gender,jdbcType=INTEGER},
            RoleId    = #{roleId,jdbcType=INTEGER},
            UserState = #{userState,jdbcType=INTEGER}
        where UserId = #{userId,jdbcType=VARCHAR}
    </update>
    <select id="findAllUserInfo" resultType="com.rea.myoffice.bean.UserBean">
        select UserId,
               UserName,
               Password,
               d.DepartId,
               Gender,
               r.RoleId,
               UserState,
               RoleName,
               DepartName departName,
               b.branchId,
               BranchName
        from userinfo u
                 left join roleinfo r on u.RoleId = r.RoleId
                 left join departinfo d on d.DepartId = u.DepartId
                 left join branchinfo b on d.BranchId = b.BranchId
    </select>
</mapper>