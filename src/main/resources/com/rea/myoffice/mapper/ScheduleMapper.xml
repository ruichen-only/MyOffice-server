<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rea.myoffice.mapper.ScheduleMapper">
  <resultMap id="BaseResultMap" type="com.rea.myoffice.model.Schedule">
    <id column="ScheduleId" jdbcType="INTEGER" property="scheduleId" />
    <result column="Title" jdbcType="VARCHAR" property="title" />
    <result column="Address" jdbcType="VARCHAR" property="address" />
    <result column="MeetingId" jdbcType="INTEGER" property="meetingId" />
    <result column="BeginTime" jdbcType="TIMESTAMP" property="beginTime" />
    <result column="EndTime" jdbcType="TIMESTAMP" property="endTime" />
    <result column="SchContent" jdbcType="VARCHAR" property="schContent" />
    <result column="CreateUser" jdbcType="VARCHAR" property="createUser" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="IfPrivate" jdbcType="INTEGER" property="ifPrivate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ScheduleId, Title, Address, MeetingId, BeginTime, EndTime, SchContent, CreateUser, 
    CreateTime, IfPrivate
  </sql>
  <select id="selectByExample" parameterType="com.rea.myoffice.model.ScheduleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from schedule
    where ScheduleId = #{scheduleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from schedule
    where ScheduleId = #{scheduleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rea.myoffice.model.ScheduleExample">
    delete from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rea.myoffice.model.Schedule">
    insert into schedule (ScheduleId, Title, Address, 
      MeetingId, BeginTime, EndTime, 
      SchContent, CreateUser, CreateTime, 
      IfPrivate)
    values (#{scheduleId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{meetingId,jdbcType=INTEGER}, #{beginTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{schContent,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{ifPrivate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rea.myoffice.model.Schedule">
    insert into schedule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        ScheduleId,
      </if>
      <if test="title != null">
        Title,
      </if>
      <if test="address != null">
        Address,
      </if>
      <if test="meetingId != null">
        MeetingId,
      </if>
      <if test="beginTime != null">
        BeginTime,
      </if>
      <if test="endTime != null">
        EndTime,
      </if>
      <if test="schContent != null">
        SchContent,
      </if>
      <if test="createUser != null">
        CreateUser,
      </if>
      <if test="createTime != null">
        CreateTime,
      </if>
      <if test="ifPrivate != null">
        IfPrivate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="meetingId != null">
        #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null">
        #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="schContent != null">
        #{schContent,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ifPrivate != null">
        #{ifPrivate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rea.myoffice.model.ScheduleExample" resultType="java.lang.Long">
    select count(*) from schedule
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update schedule
    <set>
      <if test="row.scheduleId != null">
        ScheduleId = #{row.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="row.title != null">
        Title = #{row.title,jdbcType=VARCHAR},
      </if>
      <if test="row.address != null">
        Address = #{row.address,jdbcType=VARCHAR},
      </if>
      <if test="row.meetingId != null">
        MeetingId = #{row.meetingId,jdbcType=INTEGER},
      </if>
      <if test="row.beginTime != null">
        BeginTime = #{row.beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.endTime != null">
        EndTime = #{row.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.schContent != null">
        SchContent = #{row.schContent,jdbcType=VARCHAR},
      </if>
      <if test="row.createUser != null">
        CreateUser = #{row.createUser,jdbcType=VARCHAR},
      </if>
      <if test="row.createTime != null">
        CreateTime = #{row.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.ifPrivate != null">
        IfPrivate = #{row.ifPrivate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update schedule
    set ScheduleId = #{row.scheduleId,jdbcType=INTEGER},
      Title = #{row.title,jdbcType=VARCHAR},
      Address = #{row.address,jdbcType=VARCHAR},
      MeetingId = #{row.meetingId,jdbcType=INTEGER},
      BeginTime = #{row.beginTime,jdbcType=TIMESTAMP},
      EndTime = #{row.endTime,jdbcType=TIMESTAMP},
      SchContent = #{row.schContent,jdbcType=VARCHAR},
      CreateUser = #{row.createUser,jdbcType=VARCHAR},
      CreateTime = #{row.createTime,jdbcType=TIMESTAMP},
      IfPrivate = #{row.ifPrivate,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rea.myoffice.model.Schedule">
    update schedule
    <set>
      <if test="title != null">
        Title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        Address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="meetingId != null">
        MeetingId = #{meetingId,jdbcType=INTEGER},
      </if>
      <if test="beginTime != null">
        BeginTime = #{beginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        EndTime = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="schContent != null">
        SchContent = #{schContent,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        CreateUser = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        CreateTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ifPrivate != null">
        IfPrivate = #{ifPrivate,jdbcType=INTEGER},
      </if>
    </set>
    where ScheduleId = #{scheduleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rea.myoffice.model.Schedule">
    update schedule
    set Title = #{title,jdbcType=VARCHAR},
      Address = #{address,jdbcType=VARCHAR},
      MeetingId = #{meetingId,jdbcType=INTEGER},
      BeginTime = #{beginTime,jdbcType=TIMESTAMP},
      EndTime = #{endTime,jdbcType=TIMESTAMP},
      SchContent = #{schContent,jdbcType=VARCHAR},
      CreateUser = #{createUser,jdbcType=VARCHAR},
      CreateTime = #{createTime,jdbcType=TIMESTAMP},
      IfPrivate = #{ifPrivate,jdbcType=INTEGER}
    where ScheduleId = #{scheduleId,jdbcType=INTEGER}
  </update>
</mapper>