<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rea.myoffice.mapper.LoginlogMapper">
  <resultMap id="BaseResultMap" type="com.rea.myoffice.model.Loginlog">
    <id column="LoginId" jdbcType="INTEGER" property="loginId" />
    <result column="UserId" jdbcType="VARCHAR" property="userId" />
    <result column="LoginTime" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="IfSuccess" jdbcType="INTEGER" property="ifSuccess" />
    <result column="LoginUserIp" jdbcType="VARCHAR" property="loginUserIp" />
    <result column="LoginDesc" jdbcType="VARCHAR" property="loginDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    LoginId, UserId, LoginTime, IfSuccess, LoginUserIp, LoginDesc
  </sql>
  <select id="selectByExample" parameterType="com.rea.myoffice.model.LoginlogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from loginlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from loginlog
    where LoginId = #{loginId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from loginlog
    where LoginId = #{loginId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rea.myoffice.model.LoginlogExample">
    delete from loginlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rea.myoffice.model.Loginlog">
    insert into loginlog (LoginId, UserId, LoginTime, 
      IfSuccess, LoginUserIp, LoginDesc
      )
    values (#{loginId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{ifSuccess,jdbcType=INTEGER}, #{loginUserIp,jdbcType=VARCHAR}, #{loginDesc,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rea.myoffice.model.Loginlog">
    insert into loginlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        LoginId,
      </if>
      <if test="userId != null">
        UserId,
      </if>
      <if test="loginTime != null">
        LoginTime,
      </if>
      <if test="ifSuccess != null">
        IfSuccess,
      </if>
      <if test="loginUserIp != null">
        LoginUserIp,
      </if>
      <if test="loginDesc != null">
        LoginDesc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginId != null">
        #{loginId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ifSuccess != null">
        #{ifSuccess,jdbcType=INTEGER},
      </if>
      <if test="loginUserIp != null">
        #{loginUserIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDesc != null">
        #{loginDesc,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rea.myoffice.model.LoginlogExample" resultType="java.lang.Long">
    select count(*) from loginlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update loginlog
    <set>
      <if test="row.loginId != null">
        LoginId = #{row.loginId,jdbcType=INTEGER},
      </if>
      <if test="row.userId != null">
        UserId = #{row.userId,jdbcType=VARCHAR},
      </if>
      <if test="row.loginTime != null">
        LoginTime = #{row.loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="row.ifSuccess != null">
        IfSuccess = #{row.ifSuccess,jdbcType=INTEGER},
      </if>
      <if test="row.loginUserIp != null">
        LoginUserIp = #{row.loginUserIp,jdbcType=VARCHAR},
      </if>
      <if test="row.loginDesc != null">
        LoginDesc = #{row.loginDesc,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update loginlog
    set LoginId = #{row.loginId,jdbcType=INTEGER},
      UserId = #{row.userId,jdbcType=VARCHAR},
      LoginTime = #{row.loginTime,jdbcType=TIMESTAMP},
      IfSuccess = #{row.ifSuccess,jdbcType=INTEGER},
      LoginUserIp = #{row.loginUserIp,jdbcType=VARCHAR},
      LoginDesc = #{row.loginDesc,jdbcType=VARCHAR}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rea.myoffice.model.Loginlog">
    update loginlog
    <set>
      <if test="userId != null">
        UserId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        LoginTime = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ifSuccess != null">
        IfSuccess = #{ifSuccess,jdbcType=INTEGER},
      </if>
      <if test="loginUserIp != null">
        LoginUserIp = #{loginUserIp,jdbcType=VARCHAR},
      </if>
      <if test="loginDesc != null">
        LoginDesc = #{loginDesc,jdbcType=VARCHAR},
      </if>
    </set>
    where LoginId = #{loginId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rea.myoffice.model.Loginlog">
    update loginlog
    set UserId = #{userId,jdbcType=VARCHAR},
      LoginTime = #{loginTime,jdbcType=TIMESTAMP},
      IfSuccess = #{ifSuccess,jdbcType=INTEGER},
      LoginUserIp = #{loginUserIp,jdbcType=VARCHAR},
      LoginDesc = #{loginDesc,jdbcType=VARCHAR}
    where LoginId = #{loginId,jdbcType=INTEGER}
  </update>
</mapper>