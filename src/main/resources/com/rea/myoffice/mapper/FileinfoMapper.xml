<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rea.myoffice.mapper.FileinfoMapper">
  <resultMap id="BaseResultMap" type="com.rea.myoffice.model.Fileinfo">
    <id column="FileId" jdbcType="INTEGER" property="fileId" />
    <result column="FileName" jdbcType="VARCHAR" property="fileName" />
    <result column="FileType" jdbcType="INTEGER" property="fileType" />
    <result column="Remark" jdbcType="VARCHAR" property="remark" />
    <result column="FileOwner" jdbcType="VARCHAR" property="fileOwner" />
    <result column="CreateDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="ParentId" jdbcType="INTEGER" property="parentId" />
    <result column="FilePath" jdbcType="VARCHAR" property="filePath" />
    <result column="IfDelete" jdbcType="INTEGER" property="ifDelete" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    FileId, FileName, FileType, Remark, FileOwner, CreateDate, ParentId, FilePath, IfDelete
  </sql>
  <select id="selectByExample" parameterType="com.rea.myoffice.model.FileinfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fileinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from fileinfo
    where FileId = #{fileId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from fileinfo
    where FileId = #{fileId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rea.myoffice.model.FileinfoExample">
    delete from fileinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rea.myoffice.model.Fileinfo">
    insert into fileinfo (FileId, FileName, FileType, 
      Remark, FileOwner, CreateDate, 
      ParentId, FilePath, IfDelete
      )
    values (#{fileId,jdbcType=INTEGER}, #{fileName,jdbcType=VARCHAR}, #{fileType,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{fileOwner,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{parentId,jdbcType=INTEGER}, #{filePath,jdbcType=VARCHAR}, #{ifDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rea.myoffice.model.Fileinfo">
    insert into fileinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        FileId,
      </if>
      <if test="fileName != null">
        FileName,
      </if>
      <if test="fileType != null">
        FileType,
      </if>
      <if test="remark != null">
        Remark,
      </if>
      <if test="fileOwner != null">
        FileOwner,
      </if>
      <if test="createDate != null">
        CreateDate,
      </if>
      <if test="parentId != null">
        ParentId,
      </if>
      <if test="filePath != null">
        FilePath,
      </if>
      <if test="ifDelete != null">
        IfDelete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="fileOwner != null">
        #{fileOwner,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="ifDelete != null">
        #{ifDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rea.myoffice.model.FileinfoExample" resultType="java.lang.Long">
    select count(*) from fileinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update fileinfo
    <set>
      <if test="row.fileId != null">
        FileId = #{row.fileId,jdbcType=INTEGER},
      </if>
      <if test="row.fileName != null">
        FileName = #{row.fileName,jdbcType=VARCHAR},
      </if>
      <if test="row.fileType != null">
        FileType = #{row.fileType,jdbcType=INTEGER},
      </if>
      <if test="row.remark != null">
        Remark = #{row.remark,jdbcType=VARCHAR},
      </if>
      <if test="row.fileOwner != null">
        FileOwner = #{row.fileOwner,jdbcType=VARCHAR},
      </if>
      <if test="row.createDate != null">
        CreateDate = #{row.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.parentId != null">
        ParentId = #{row.parentId,jdbcType=INTEGER},
      </if>
      <if test="row.filePath != null">
        FilePath = #{row.filePath,jdbcType=VARCHAR},
      </if>
      <if test="row.ifDelete != null">
        IfDelete = #{row.ifDelete,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update fileinfo
    set FileId = #{row.fileId,jdbcType=INTEGER},
      FileName = #{row.fileName,jdbcType=VARCHAR},
      FileType = #{row.fileType,jdbcType=INTEGER},
      Remark = #{row.remark,jdbcType=VARCHAR},
      FileOwner = #{row.fileOwner,jdbcType=VARCHAR},
      CreateDate = #{row.createDate,jdbcType=TIMESTAMP},
      ParentId = #{row.parentId,jdbcType=INTEGER},
      FilePath = #{row.filePath,jdbcType=VARCHAR},
      IfDelete = #{row.ifDelete,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rea.myoffice.model.Fileinfo">
    update fileinfo
    <set>
      <if test="fileName != null">
        FileName = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        FileType = #{fileType,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        Remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="fileOwner != null">
        FileOwner = #{fileOwner,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        CreateDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="parentId != null">
        ParentId = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="filePath != null">
        FilePath = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="ifDelete != null">
        IfDelete = #{ifDelete,jdbcType=INTEGER},
      </if>
    </set>
    where FileId = #{fileId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rea.myoffice.model.Fileinfo">
    update fileinfo
    set FileName = #{fileName,jdbcType=VARCHAR},
      FileType = #{fileType,jdbcType=INTEGER},
      Remark = #{remark,jdbcType=VARCHAR},
      FileOwner = #{fileOwner,jdbcType=VARCHAR},
      CreateDate = #{createDate,jdbcType=TIMESTAMP},
      ParentId = #{parentId,jdbcType=INTEGER},
      FilePath = #{filePath,jdbcType=VARCHAR},
      IfDelete = #{ifDelete,jdbcType=INTEGER}
    where FileId = #{fileId,jdbcType=INTEGER}
  </update>
</mapper>