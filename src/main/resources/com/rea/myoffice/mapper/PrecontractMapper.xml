<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rea.myoffice.mapper.PrecontractMapper">
  <resultMap id="BaseResultMap" type="com.rea.myoffice.model.Precontract">
    <id column="PreContractId" jdbcType="INTEGER" property="preContractId" />
    <result column="ScheduleId" jdbcType="INTEGER" property="scheduleId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.rea.myoffice.model.Precontract">
    <result column="UserId" jdbcType="VARBINARY" property="userId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    PreContractId, ScheduleId
  </sql>
  <sql id="Blob_Column_List">
    UserId
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.rea.myoffice.model.PrecontractExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from precontract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.rea.myoffice.model.PrecontractExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from precontract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from precontract
    where PreContractId = #{preContractId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from precontract
    where PreContractId = #{preContractId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rea.myoffice.model.PrecontractExample">
    delete from precontract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rea.myoffice.model.Precontract">
    insert into precontract (PreContractId, ScheduleId, UserId
      )
    values (#{preContractId,jdbcType=INTEGER}, #{scheduleId,jdbcType=INTEGER}, #{userId,jdbcType=VARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rea.myoffice.model.Precontract">
    insert into precontract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="preContractId != null">
        PreContractId,
      </if>
      <if test="scheduleId != null">
        ScheduleId,
      </if>
      <if test="userId != null">
        UserId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="preContractId != null">
        #{preContractId,jdbcType=INTEGER},
      </if>
      <if test="scheduleId != null">
        #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rea.myoffice.model.PrecontractExample" resultType="java.lang.Long">
    select count(*) from precontract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update precontract
    <set>
      <if test="row.preContractId != null">
        PreContractId = #{row.preContractId,jdbcType=INTEGER},
      </if>
      <if test="row.scheduleId != null">
        ScheduleId = #{row.scheduleId,jdbcType=INTEGER},
      </if>
      <if test="row.userId != null">
        UserId = #{row.userId,jdbcType=VARBINARY},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update precontract
    set PreContractId = #{row.preContractId,jdbcType=INTEGER},
      ScheduleId = #{row.scheduleId,jdbcType=INTEGER},
      UserId = #{row.userId,jdbcType=VARBINARY}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update precontract
    set PreContractId = #{row.preContractId,jdbcType=INTEGER},
      ScheduleId = #{row.scheduleId,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rea.myoffice.model.Precontract">
    update precontract
    <set>
      <if test="scheduleId != null">
        ScheduleId = #{scheduleId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        UserId = #{userId,jdbcType=VARBINARY},
      </if>
    </set>
    where PreContractId = #{preContractId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.rea.myoffice.model.Precontract">
    update precontract
    set ScheduleId = #{scheduleId,jdbcType=INTEGER},
      UserId = #{userId,jdbcType=VARBINARY}
    where PreContractId = #{preContractId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rea.myoffice.model.Precontract">
    update precontract
    set ScheduleId = #{scheduleId,jdbcType=INTEGER}
    where PreContractId = #{preContractId,jdbcType=INTEGER}
  </update>
</mapper>