<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rea.myoffice.mapper.OperatelogMapper">
  <resultMap id="BaseResultMap" type="com.rea.myoffice.model.Operatelog">
    <id column="OperateId" jdbcType="INTEGER" property="operateId" />
    <result column="UserId" jdbcType="VARCHAR" property="userId" />
    <result column="OperateName" jdbcType="VARCHAR" property="operateName" />
    <result column="ObjectId" jdbcType="VARCHAR" property="objectId" />
    <result column="OperateDesc" jdbcType="VARCHAR" property="operateDesc" />
    <result column="OperateTime" jdbcType="TIMESTAMP" property="operateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    OperateId, UserId, OperateName, ObjectId, OperateDesc, OperateTime
  </sql>
  <select id="selectByExample" parameterType="com.rea.myoffice.model.OperatelogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operatelog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operatelog
    where OperateId = #{operateId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operatelog
    where OperateId = #{operateId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rea.myoffice.model.OperatelogExample">
    delete from operatelog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rea.myoffice.model.Operatelog">
    insert into operatelog (OperateId, UserId, OperateName, 
      ObjectId, OperateDesc, OperateTime
      )
    values (#{operateId,jdbcType=INTEGER}, #{userId,jdbcType=VARCHAR}, #{operateName,jdbcType=VARCHAR}, 
      #{objectId,jdbcType=VARCHAR}, #{operateDesc,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rea.myoffice.model.Operatelog">
    insert into operatelog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operateId != null">
        OperateId,
      </if>
      <if test="userId != null">
        UserId,
      </if>
      <if test="operateName != null">
        OperateName,
      </if>
      <if test="objectId != null">
        ObjectId,
      </if>
      <if test="operateDesc != null">
        OperateDesc,
      </if>
      <if test="operateTime != null">
        OperateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operateId != null">
        #{operateId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="operateName != null">
        #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null">
        #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="operateDesc != null">
        #{operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rea.myoffice.model.OperatelogExample" resultType="java.lang.Long">
    select count(*) from operatelog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update operatelog
    <set>
      <if test="row.operateId != null">
        OperateId = #{row.operateId,jdbcType=INTEGER},
      </if>
      <if test="row.userId != null">
        UserId = #{row.userId,jdbcType=VARCHAR},
      </if>
      <if test="row.operateName != null">
        OperateName = #{row.operateName,jdbcType=VARCHAR},
      </if>
      <if test="row.objectId != null">
        ObjectId = #{row.objectId,jdbcType=VARCHAR},
      </if>
      <if test="row.operateDesc != null">
        OperateDesc = #{row.operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="row.operateTime != null">
        OperateTime = #{row.operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update operatelog
    set OperateId = #{row.operateId,jdbcType=INTEGER},
      UserId = #{row.userId,jdbcType=VARCHAR},
      OperateName = #{row.operateName,jdbcType=VARCHAR},
      ObjectId = #{row.objectId,jdbcType=VARCHAR},
      OperateDesc = #{row.operateDesc,jdbcType=VARCHAR},
      OperateTime = #{row.operateTime,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rea.myoffice.model.Operatelog">
    update operatelog
    <set>
      <if test="userId != null">
        UserId = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="operateName != null">
        OperateName = #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="objectId != null">
        ObjectId = #{objectId,jdbcType=VARCHAR},
      </if>
      <if test="operateDesc != null">
        OperateDesc = #{operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null">
        OperateTime = #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where OperateId = #{operateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rea.myoffice.model.Operatelog">
    update operatelog
    set UserId = #{userId,jdbcType=VARCHAR},
      OperateName = #{operateName,jdbcType=VARCHAR},
      ObjectId = #{objectId,jdbcType=VARCHAR},
      OperateDesc = #{operateDesc,jdbcType=VARCHAR},
      OperateTime = #{operateTime,jdbcType=TIMESTAMP}
    where OperateId = #{operateId,jdbcType=INTEGER}
  </update>
</mapper>