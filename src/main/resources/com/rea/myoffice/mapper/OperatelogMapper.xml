<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rea.myoffice.mapper.OperatelogMapper">
  <resultMap id="BaseResultMap" type="com.rea.myoffice.model.Operatelog">
    <id column="OperateId" jdbcType="INTEGER" property="operateid" />
    <result column="UserId" jdbcType="VARCHAR" property="userid" />
    <result column="OperateName" jdbcType="VARCHAR" property="operatename" />
    <result column="ObjectId" jdbcType="VARCHAR" property="objectid" />
    <result column="OperateDesc" jdbcType="VARCHAR" property="operatedesc" />
    <result column="OperateTime" jdbcType="TIMESTAMP" property="operatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    OperateId, UserId, OperateName, ObjectId, OperateDesc, OperateTime
  </sql>
  <select id="selectByExample" parameterType="com.rea.myoffice.model.OperatelogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operatelog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from operatelog
    where OperateId = #{operateid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from operatelog
    where OperateId = #{operateid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rea.myoffice.model.OperatelogExample">
    delete from operatelog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rea.myoffice.model.Operatelog">
    insert into operatelog (OperateId, UserId, OperateName, 
      ObjectId, OperateDesc, OperateTime
      )
    values (#{operateid,jdbcType=INTEGER}, #{userid,jdbcType=VARCHAR}, #{operatename,jdbcType=VARCHAR}, 
      #{objectid,jdbcType=VARCHAR}, #{operatedesc,jdbcType=VARCHAR}, #{operatetime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.rea.myoffice.model.Operatelog">
    insert into operatelog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="operateid != null">
        OperateId,
      </if>
      <if test="userid != null">
        UserId,
      </if>
      <if test="operatename != null">
        OperateName,
      </if>
      <if test="objectid != null">
        ObjectId,
      </if>
      <if test="operatedesc != null">
        OperateDesc,
      </if>
      <if test="operatetime != null">
        OperateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="operateid != null">
        #{operateid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="operatename != null">
        #{operatename,jdbcType=VARCHAR},
      </if>
      <if test="objectid != null">
        #{objectid,jdbcType=VARCHAR},
      </if>
      <if test="operatedesc != null">
        #{operatedesc,jdbcType=VARCHAR},
      </if>
      <if test="operatetime != null">
        #{operatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rea.myoffice.model.OperatelogExample" resultType="java.lang.Long">
    select count(*) from operatelog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update operatelog
    <set>
      <if test="record.operateid != null">
        OperateId = #{record.operateid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.operatename != null">
        OperateName = #{record.operatename,jdbcType=VARCHAR},
      </if>
      <if test="record.objectid != null">
        ObjectId = #{record.objectid,jdbcType=VARCHAR},
      </if>
      <if test="record.operatedesc != null">
        OperateDesc = #{record.operatedesc,jdbcType=VARCHAR},
      </if>
      <if test="record.operatetime != null">
        OperateTime = #{record.operatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update operatelog
    set OperateId = #{record.operateid,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=VARCHAR},
      OperateName = #{record.operatename,jdbcType=VARCHAR},
      ObjectId = #{record.objectid,jdbcType=VARCHAR},
      OperateDesc = #{record.operatedesc,jdbcType=VARCHAR},
      OperateTime = #{record.operatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rea.myoffice.model.Operatelog">
    update operatelog
    <set>
      <if test="userid != null">
        UserId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="operatename != null">
        OperateName = #{operatename,jdbcType=VARCHAR},
      </if>
      <if test="objectid != null">
        ObjectId = #{objectid,jdbcType=VARCHAR},
      </if>
      <if test="operatedesc != null">
        OperateDesc = #{operatedesc,jdbcType=VARCHAR},
      </if>
      <if test="operatetime != null">
        OperateTime = #{operatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where OperateId = #{operateid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rea.myoffice.model.Operatelog">
    update operatelog
    set UserId = #{userid,jdbcType=VARCHAR},
      OperateName = #{operatename,jdbcType=VARCHAR},
      ObjectId = #{objectid,jdbcType=VARCHAR},
      OperateDesc = #{operatedesc,jdbcType=VARCHAR},
      OperateTime = #{operatetime,jdbcType=TIMESTAMP}
    where OperateId = #{operateid,jdbcType=INTEGER}
  </update>
</mapper>