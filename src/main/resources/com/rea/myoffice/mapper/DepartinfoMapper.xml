<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rea.myoffice.mapper.DepartinfoMapper">
    <resultMap id="BaseResultMap" type="com.rea.myoffice.model.Departinfo">
        <id column="DepartId" jdbcType="INTEGER" property="departId"/>
        <result column="DepartName" jdbcType="VARCHAR" property="departName"/>
        <result column="PrincipalUser" jdbcType="VARCHAR" property="principalUser"/>
        <result column="ConnectTelNo" jdbcType="BIGINT" property="connectTelNo"/>
        <result column="ConnectMobileTelNo" jdbcType="BIGINT" property="connectMobileTelNo"/>
        <result column="Faxes" jdbcType="BIGINT" property="faxes"/>
        <result column="BranchId" jdbcType="INTEGER" property="branchId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        DepartId, DepartName, PrincipalUser, ConnectTelNo, ConnectMobileTelNo, Faxes, BranchId
    </sql>
    <select id="selectByExample" parameterType="com.rea.myoffice.model.DepartinfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from departinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from departinfo
        where DepartId = #{departId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from departinfo
        where DepartId = #{departId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.rea.myoffice.model.DepartinfoExample">
        delete from departinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.rea.myoffice.model.Departinfo">
        insert into departinfo (DepartId, DepartName, PrincipalUser,
                                ConnectTelNo, ConnectMobileTelNo, Faxes,
                                BranchId)
        values (#{departId,jdbcType=INTEGER}, #{departName,jdbcType=VARCHAR}, #{principalUser,jdbcType=VARCHAR},
                #{connectTelNo,jdbcType=BIGINT}, #{connectMobileTelNo,jdbcType=BIGINT}, #{faxes,jdbcType=BIGINT},
                #{branchId,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.rea.myoffice.model.Departinfo">
        insert into departinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="departId != null">
                DepartId,
            </if>
            <if test="departName != null">
                DepartName,
            </if>
            <if test="principalUser != null">
                PrincipalUser,
            </if>
            <if test="connectTelNo != null">
                ConnectTelNo,
            </if>
            <if test="connectMobileTelNo != null">
                ConnectMobileTelNo,
            </if>
            <if test="faxes != null">
                Faxes,
            </if>
            <if test="branchId != null">
                BranchId,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="departId != null">
                #{departId,jdbcType=INTEGER},
            </if>
            <if test="departName != null">
                #{departName,jdbcType=VARCHAR},
            </if>
            <if test="principalUser != null">
                #{principalUser,jdbcType=VARCHAR},
            </if>
            <if test="connectTelNo != null">
                #{connectTelNo,jdbcType=BIGINT},
            </if>
            <if test="connectMobileTelNo != null">
                #{connectMobileTelNo,jdbcType=BIGINT},
            </if>
            <if test="faxes != null">
                #{faxes,jdbcType=BIGINT},
            </if>
            <if test="branchId != null">
                #{branchId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.rea.myoffice.model.DepartinfoExample" resultType="java.lang.Long">
        select count(*) from departinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update departinfo
        <set>
            <if test="row.departId != null">
                DepartId = #{row.departId,jdbcType=INTEGER},
            </if>
            <if test="row.departName != null">
                DepartName = #{row.departName,jdbcType=VARCHAR},
            </if>
            <if test="row.principalUser != null">
                PrincipalUser = #{row.principalUser,jdbcType=VARCHAR},
            </if>
            <if test="row.connectTelNo != null">
                ConnectTelNo = #{row.connectTelNo,jdbcType=BIGINT},
            </if>
            <if test="row.connectMobileTelNo != null">
                ConnectMobileTelNo = #{row.connectMobileTelNo,jdbcType=BIGINT},
            </if>
            <if test="row.faxes != null">
                Faxes = #{row.faxes,jdbcType=BIGINT},
            </if>
            <if test="row.branchId != null">
                BranchId = #{row.branchId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update departinfo
        set DepartId = #{row.departId,jdbcType=INTEGER},
        DepartName = #{row.departName,jdbcType=VARCHAR},
        PrincipalUser = #{row.principalUser,jdbcType=VARCHAR},
        ConnectTelNo = #{row.connectTelNo,jdbcType=BIGINT},
        ConnectMobileTelNo = #{row.connectMobileTelNo,jdbcType=BIGINT},
        Faxes = #{row.faxes,jdbcType=BIGINT},
        BranchId = #{row.branchId,jdbcType=INTEGER}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.rea.myoffice.model.Departinfo">
        update departinfo
        <set>
            <if test="departName != null">
                DepartName = #{departName,jdbcType=VARCHAR},
            </if>
            <if test="principalUser != null">
                PrincipalUser = #{principalUser,jdbcType=VARCHAR},
            </if>
            <if test="connectTelNo != null">
                ConnectTelNo = #{connectTelNo,jdbcType=BIGINT},
            </if>
            <if test="connectMobileTelNo != null">
                ConnectMobileTelNo = #{connectMobileTelNo,jdbcType=BIGINT},
            </if>
            <if test="faxes != null">
                Faxes = #{faxes,jdbcType=BIGINT},
            </if>
            <if test="branchId != null">
                BranchId = #{branchId,jdbcType=INTEGER},
            </if>
        </set>
        where DepartId = #{departId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.rea.myoffice.model.Departinfo">
        update departinfo
        set DepartName         = #{departName,jdbcType=VARCHAR},
            PrincipalUser      = #{principalUser,jdbcType=VARCHAR},
            ConnectTelNo       = #{connectTelNo,jdbcType=BIGINT},
            ConnectMobileTelNo = #{connectMobileTelNo,jdbcType=BIGINT},
            Faxes              = #{faxes,jdbcType=BIGINT},
            BranchId           = #{branchId,jdbcType=INTEGER}
        where DepartId = #{departId,jdbcType=INTEGER}
    </update>
    <select id="findDepartAndBranchInfo" resultType="com.rea.myoffice.bean.DepartBean">
        select
        <if test="distinct">
            distinct
        </if>
        d.DepartId, DepartName, PrincipalUser userId, ConnectTelNo, ConnectMobileTelNo, Faxes, b.BranchId as BranchId,
        BranchName, u.UserName as username
        from departinfo d
        inner join branchinfo b on d.BranchId = b.BranchId
        left join userinfo u on d.PrincipalUser = u.UserId
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
</mapper>